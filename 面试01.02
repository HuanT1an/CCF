bool CheckPermutation(char* s1, char* s2){
    if(strlen(s1) != strlen(s2))
    {
        return false;
    }
    int len = strlen(s1);
    int arrA[len];
    int arrB[len];//将两个字符串转化为整形数组

    int i = 0;
    for(i=0;i<len;i++)
    {
        arrA[i] = s1[i] - 'a';
        arrB[i] = s2[i] - 'a';
    }
    int t = 0;
    for(i=len-1;i>=0;i--)//数组排序，冒泡排序
    {
        for(int j=0; j<i;j++)
        {
            if(arrA[j] > arrA[j+1])
            {
                t = arrA[j+1];
                arrA[j+1] = arrA[j];
                arrA[j] = t;
            }

            if(arrB[j] > arrB[j+1])
            {
                t = arrB[j+1];
                arrB[j+1] = arrB[j];
                arrB[j] = t;
            }
        }
    }
    for(i=0;i<len;i++) //判断数组是否一样
    {
        if(arrA[i] != arrB[i])
        {
            return false;
        }
    }
    return true;
}
